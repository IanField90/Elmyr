plugins {
    id "org.jetbrains.kotlin.jvm" version "1.1.51"
    id 'com.github.ben-manes.versions' version '0.15.0'
}
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'jacoco'
apply plugin: 'org.junit.platform.gradle.plugin'

dependencies {
    // KOTLIN
    compile "org.jetbrains.kotlin:kotlin-stdlib:${kotlin_version}"

    compileOnly "junit:junit:${junit4_version}"

    // TESTS
    testCompileOnly "junit:junit:${junit4_version}"
    testCompile "net.wuerl.kotlin:assertj-core-kotlin:${assertj_version}"
    testCompile "com.nhaarman:mockito-kotlin:${mockito_kotlin_version}"
    testCompile "org.jetbrains.kotlin:kotlin-reflect:${kotlin_version}"

    // SPEK
    testCompile "org.jetbrains.spek:spek-api:$spek_version"
    testCompile "org.jetbrains.spek:spek-subject-extension:$spek_version"
    testRuntime "org.jetbrains.spek:spek-junit-platform-engine:$spek_version"
    testRuntime "org.junit.platform:junit-platform-launcher:$junit_platform_version"
    testRuntime("org.junit.vintage:junit-vintage-engine:${junit_vintage_version}")
}

junitPlatform {
    filters {
        engines {
            include 'spek', 'junit-jupiter', 'junit-vintage'
        }
    }
}


project.afterEvaluate {
    def junitPlatformTestTask = project.tasks.getByName('junitPlatformTest')

    // configure jacoco to analyze the junitPlatformTest task
    jacoco {
        toolVersion = "0.7.8"
        applyTo junitPlatformTestTask
    }

    // create junit platform jacoco task
    def jacocoTask = project.task(type: JacocoReport, "junitPlatformJacocoReport",
            {
                sourceSets sourceSets.main
                sourceDirectories = files(project.sourceSets.main.allSource.srcDirs)
                classDirectories =  files(project.sourceSets.main.output)
                executionData junitPlatformTestTask

                reports {
                    xml.enabled true
                    xml.destination "${buildDir}/reports/jacoco/report.xml"
                    csv.enabled false
                    html.enabled true
                }
            })

    project.tasks.getByName('check').dependsOn jacocoTask
}


sourceCompatibility = 1.8
targetCompatibility = 1.8
